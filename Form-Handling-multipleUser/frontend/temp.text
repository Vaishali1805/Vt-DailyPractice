// to access the radio button

const radios = document.querySelectorAll('input[name="gender"]');
radios.forEach(radio => {
    radio.addEventListener('change', () => {
        if (radio.checked) {
            console.log(radio.value);
        }
    });
});


async function handleSubmit(event) {
    try {
        event.preventDefault();
        // Validate form before proceeding
        if (!validate_form()) {
            return;
        }

        console.log("selectState: ", selectState.value);
        console.log("selectCity: ", selectCity.value);

        const formDataObj = {
            firstName: firstName.value || null,
            lastName: lastName.value || null,
            email: email.value || null,
            contactNo: contactNo.value || null,
            dateOfBirth: dateOfBirth.value || null,
            studentId: studentId.value || null,
            gender: gender?.value || null,
            address: address.value || null,
            Country: selectCountry && selectCountry.value ? JSON.parse(selectCountry.value).name : null,
            State: selectState && selectState.value ? JSON.parse(selectState.value).name : null,
            City: selectCity && selectCity.value ? JSON.parse(selectCity.value).name : null,
        };

        console.log("formDataObj: ", formDataObj);

        // Handle Profile Picture
        const file = inputProfile.files[0];
        console.log("file: ", file);

        const formData = new FormData();

        // Default profile picture if none uploaded
        const defaultImage = 'default_profile.png'; // Replace with your default image path
        const fileToUpload = file ? file : new File([], defaultImage);

        formData.append("profile", fileToUpload, `${Date.now()}_${fileToUpload.name || defaultImage}`);
        formData.append("formData", JSON.stringify(formDataObj)); // Ensure it's a string

        // Submit the data
        const url = 'http://localhost:5000/submit/formData';
        const response = await fetch(url, {
            method: "POST",
            body: formData,
        });

        if (!response.ok) {
            throw new Error(`Response status: ${response.status}`);
        }

        const data = await response.json();
        console.log(data);
        window.location.href = '/table.html';

    } catch (error) {
        console.log("Error: ", error);
    }
}


studentData = [
    {
        "firstName": "Vaishali",
        "lastName": "asjkbh",
        "email": "sdf@jhasv.com",
        "contactNo": "3657823578",
        "dateOfBirth": "2025-03-31",
        "studentId": "23765",
        "gender": null,
        "address": "fdresih",
        "country": "Afghanistan",
        "state": "Ghazni",
        "city": "Ghazni",
        "profile": {
            "fieldname": "profile",
            "originalname": "1743417031000_image_2025_01_09T06_08_27_533Z (2).png",
            "encoding": "7bit",
            "mimetype": "image/png",
            "destination": "uploads",
            "filename": "1743417031000_image_2025_01_09T06_08_27_533Z (2).png",
            "path": "uploads\\1743417031000_image_2025_01_09T06_08_27_533Z (2).png",
            "size": 50309
        }
    },
    {
        "firstName": "Ritika",
        "lastName": "sdn",
        "email": "sfrj@sdfk.com",
        "contactNo": "2134123424",
        "dateOfBirth": "2025-03-18",
        "studentId": "23",
        "gender": null,
        "address": null,
        "country": "Bangladesh",
        "state": "Chandpur District",
        "city": null,
        "profile": {
            "fieldname": "profile",
            "originalname": "1743417086864_default_userImage.webp",
            "encoding": "7bit",
            "mimetype": "application/octet-stream",
            "destination": "uploads",
            "filename": "1743417086864_default_userImage.webp",
            "path": "uploads\\1743417086864_default_userImage.webp",
            "size": 0
        }
    }
]



async function getStudentData() {
    try {
        const url = 'http://localhost:5000/get/studentData';
        const response = await fetch(url, {
            method: "GET",
        });
        if (!response.ok) {
            throw new Error(`Response status: ${response.status}`);
        }
        const data = await response.json();
        studentData = data.studentData;
        console.log("studentData:", studentData);
        rowContainer.innerHTML = "";

        let count = 1;
        studentData.forEach((obj) => {
            const newRow = document.createElement('tr');

            // Create checkbox cell
            const td = document.createElement('td');
            const checkbox = document.createElement('input');
            checkbox.type = "checkbox";
            checkbox.name = "select";
            checkbox.classList.add("check");
            checkbox.addEventListener('change', (event) => {
                if (event.target.checked) {
                    check(obj.studentId);
                } else {
                    uncheck(obj.studentId);
                }
                updateMainCheckbox();
            });
            td.appendChild(checkbox);
            newRow.appendChild(td);

            // Serial Number
            newRow.innerHTML += `<td>${count++}</td>`;

            // Image Preview
            const tdImage = document.createElement('td');
            const fileUrl = obj.profile && obj.profile.path
                ? `http://localhost:5000/${obj.profile.path}`
                : `http://localhost:5000/uploads/${obj.profile}`;

            const img = document.createElement('img');
            img.src = fileUrl;
            img.alt = "Student Profile";
            img.classList.add("userImg");
            tdImage.appendChild(img);
            newRow.appendChild(tdImage);

            // Other data cells
            newRow.innerHTML += `
                <td>${obj.firstName !== null ? obj.firstName : "-"}</td>
                <td>${obj.lastName !== null ? obj.lastName : "-"}</td>
                <td>${obj.email !== null ? obj.email : "-"}</td>
                <td>${obj.contactNo !== null ? obj.contactNo : "-"}</td>
                <td>${obj.dateOfBirth !== null ? obj.dateOfBirth : "-"}</td>
                <td>${obj.studentId !== null ? obj.studentId : "-"}</td>
                <td>${obj.gender !== null ? obj.gender : "-"}</td>
                <td>${obj.address !== null ? obj.address : "-"}</td>
                <td>${obj.country !== null ? obj.country : "-"}</td>
                <td>${obj.state !== null ? obj.state : "-"}</td>
                <td>${obj.city !== null ? obj.city : "-"}</td>
            `;

            // Edit Icon
            const editTd = document.createElement('td');
            const editImg = document.createElement('img');
            editImg.src = './assets/edit.svg';
            editImg.classList.add('editIcon');
            editTd.appendChild(editImg);
            newRow.appendChild(editTd);

            // Delete Icon
            const deleteTd = document.createElement('td');
            const deleteImg = document.createElement('img');
            deleteImg.src = './assets/delete.svg';
            deleteImg.classList.add('deleteIcon');
            deleteTd.appendChild(deleteImg);
            newRow.appendChild(deleteTd);

            rowContainer.appendChild(newRow);

            deleteImg.addEventListener("click", function () {
                // Add a confirmation dialog here
                deleteSingleStudent(obj.studentId);
            });
        });
    } catch (error) {
        console.log("Error: ", error);
    }
}





// Event Listener for Row Container (Event Delegation)
rowContainer.addEventListener("change", (event) => {
    if (event.target && event.target.classList.contains("check")) {
        const checkbox = event.target;
        const studentId = checkbox.closest('tr').dataset.studentId;

        if (checkbox.checked) {
            check(studentId);
        } else {
            uncheck(studentId);
        }
        updateMainCheckbox();
    }
});

// Main Checkbox for Select/Deselect All
mainCheckBox.addEventListener("change", () => {
    const checkBoxes = document.getElementsByClassName('check');
    const isChecked = mainCheckBox.checked;

    for (let checkbox of checkBoxes) {
        checkbox.checked = isChecked;
        const studentId = checkbox.closest('tr').dataset.studentId;
        if (isChecked) {
            selectedIds.add(studentId);
        } else {
            selectedIds.delete(studentId);
        }
    }
    console.log("selectedIds: ", selectedIds);
});

async function getStudentData() {
    try {
        const url = 'http://localhost:5000/get/studentData';
        const response = await fetch(url);
        const data = await response.json();
        studentData = data.studentData;

        rowContainer.innerHTML = "";
        studentData.forEach((obj, index) => {
            const newRow = document.createElement('tr');
            newRow.dataset.studentId = obj.studentId;  // Add data attribute for easy access

            newRow.innerHTML = `
                <td><input type="checkbox" class="check"></td>
                <td>${index + 1}</td>
                <td><img src="http://localhost:5000/${obj.profile?.path || obj.profile}" class="userImg" alt="Profile"></td>
                <td>${obj.firstName || "-"}</td>
                <td>${obj.lastName || "-"}</td>
                <td>${obj.email || "-"}</td>
                <td>${obj.contactNo || "-"}</td>
                <td>${obj.dateOfBirth || "-"}</td>
                <td>${obj.studentId || "-"}</td>
                <td>${obj.gender || "-"}</td>
                <td>${obj.address || "-"}</td>
                <td>${obj.country || "-"}</td>
                <td>${obj.state || "-"}</td>
                <td>${obj.city || "-"}</td>
                <td><img src="./assets/edit.svg" class="editIcon"></td>
                <td><img src="./assets/delete.svg" class="deleteIcon"></td>
            `;

            rowContainer.appendChild(newRow);
        });
    } catch (error) {
        console.log("Error:", error);
    }
}


//controller
export const editFormData = (req, res) => {
  const formData = JSON.parse(req.body.formData);
  const profile = req.file ? req.file.buffer : null; // Handle missing file

  console.log("Form Data:", formData);
  console.log("Profile:", profile ? 'Profile uploaded' : 'No profile uploaded');

  // Logic to update the data
  res.json({ success: true, message: "Data updated successfully!" });
};


import myCache from "../myCache.js";
import path from 'path';

export const editFormData = (req, res) => {
    try {
        console.log("am in editFormData");
        console.log("req.body: ", req.body);
        const { formData } = JSON.parse(req.body.formData); // Assuming it's a JSON string
        const profile = req.file ? req.file.path : null; // Using path instead of buffer

        console.log("formData:", formData);
        console.log("profile:", profile);

        res.json({ message: "Data edited Successfully", success: true });
    } catch (error) {
        console.error("Error editing student records:", error);
        res.status(500).json({ message: "An unexpected error occurred", success: false });
    }
};


const uploadProfile = multer({ 
    storage,
    limits: { fileSize: 5 * 1024 * 1024 }, // 5 MB limit
    fileFilter: (req, file, cb) => {
        const allowedTypes = ['image/jpeg', 'image/png'];
        if (allowedTypes.includes(file.mimetype)) {
            cb(null, true);
        } else {
            cb(new Error('Invalid file type. Only JPEG and PNG are allowed.'));
        }
    }
});


India states
{
        "id": 4006,
        "name": "Meghalaya",
        "code": "ML",
        "countryId": 3
    },
    {
        "id": 4007,
        "name": "Haryana",
        "code": "HR",
        "countryId": 3
    },
    {
        "id": 4008,
        "name": "Maharashtra",
        "code": "MH",
        "countryId": 3
    },
    {
        "id": 4009,
        "name": "Goa",
        "code": "GA",
        "countryId": 3
    },
    {
        "id": 4010,
        "name": "Manipur",
        "code": "MN",
        "countryId": 3
    },
    {
        "id": 4011,
        "name": "Puducherry",
        "code": "PY",
        "countryId": 3
    },
    {
        "id": 4012,
        "name": "Telangana",
        "code": "TG",
        "countryId": 3
    },
    {
        "id": 4013,
        "name": "Odisha",
        "code": "OR",
        "countryId": 3
    },
    {
        "id": 4014,
        "name": "Rajasthan",
        "code": "RJ",
        "countryId": 3
    },
    {
        "id": 4015,
        "name": "Punjab",
        "code": "PB",
        "countryId": 3
    },
    {
        "id": 4016,
        "name": "Uttarakhand",
        "code": "UT",
        "countryId": 3
    },
    {
        "id": 4017,
        "name": "Andhra Pradesh",
        "code": "AP",
        "countryId": 3
    },
    {
        "id": 4018,
        "name": "Nagaland",
        "code": "NL",
        "countryId": 3
    },
    {
        "id": 4019,
        "name": "Lakshadweep",
        "code": "LD",
        "countryId": 3
    },
    {
        "id": 4020,
        "name": "Himachal Pradesh",
        "code": "HP",
        "countryId": 3
    },
    {
        "id": 4021,
        "name": "Delhi",
        "code": "DL",
        "countryId": 3
    },
    {
        "id": 4022,
        "name": "Uttar Pradesh",
        "code": "UP",
        "countryId": 3
    },
    {
        "id": 4023,
        "name": "Andaman and Nicobar Islands",
        "code": "AN",
        "countryId": 3
    },
    {
        "id": 4024,
        "name": "Arunachal Pradesh",
        "code": "AR",
        "countryId": 3
    },
    {
        "id": 4025,
        "name": "Jharkhand",
        "code": "JH",
        "countryId": 3
    },
    {
        "id": 4026,
        "name": "Karnataka",
        "code": "KA",
        "countryId": 3
    },
    {
        "id": 4027,
        "name": "Assam",
        "code": "AS",
        "countryId": 3
    },
    {
        "id": 4028,
        "name": "Kerala",
        "code": "KL",
        "countryId": 3
    },
    {
        "id": 4029,
        "name": "Jammu and Kashmir",
        "code": "JK",
        "countryId": 3
    },
    {
        "id": 4030,
        "name": "Gujarat",
        "code": "GJ",
        "countryId": 3
    },
    {
        "id": 4031,
        "name": "Chandigarh",
        "code": "CH",
        "countryId": 3
    },
    {
        "id": 4033,
        "name": "Dadra and Nagar Haveli and Daman and Diu",
        "code": "DH",
        "countryId": 3
    },
    {
        "id": 4034,
        "name": "Sikkim",
        "code": "SK",
        "countryId": 3
    },
    {
        "id": 4035,
        "name": "Tamil Nadu",
        "code": "TN",
        "countryId": 3
    },
    {
        "id": 4036,
        "name": "Mizoram",
        "code": "MZ",
        "countryId": 3
    },
    {
        "id": 4037,
        "name": "Bihar",
        "code": "BR",
        "countryId": 3
    },
    {
        "id": 4038,
        "name": "Tripura",
        "code": "TR",
        "countryId": 3
    },
    {
        "id": 4039,
        "name": "Madhya Pradesh",
        "code": "MP",
        "countryId": 3
    },
    {
        "id": 4040,
        "name": "Chhattisgarh",
        "code": "CT",
        "countryId": 3
    },
    {
        "id": 4852,
        "name": "Ladakh",
        "code": "LA",
        "countryId": 3
    },
    {
        "id": 4853,
        "name": "West Bengal",
        "code": "WB",
        "countryId": 3
    },

NewZealand states:
{
        "id": 4059,
        "name": "Northland Region",
        "code": "NTL",
        "countryId": 4
    },
    {
        "id": 4060,
        "name": "Manawatu-Wanganui Region",
        "code": "MWT",
        "countryId": 4
    },
    {
        "id": 4061,
        "name": "Waikato Region",
        "code": "WKO",
        "countryId": 4
    },
    {
        "id": 4062,
        "name": "Otago Region",
        "code": "OTA",
        "countryId": 4
    },
    {
        "id": 4063,
        "name": "Marlborough Region",
        "code": "MBH",
        "countryId": 4
    },
    {
        "id": 4064,
        "name": "West Coast Region",
        "code": "WTC",
        "countryId": 4
    },
    {
        "id": 4065,
        "name": "Wellington Region",
        "code": "WGN",
        "countryId": 4
    },
    {
        "id": 4066,
        "name": "Canterbury Region",
        "code": "CAN",
        "countryId": 4
    },
    {
        "id": 4067,
        "name": "Chatham Islands",
        "code": "CIT",
        "countryId": 4
    },
    {
        "id": 4068,
        "name": "Gisborne District",
        "code": "GIS",
        "countryId": 4
    },
    {
        "id": 4069,
        "name": "Taranaki Region",
        "code": "TKI",
        "countryId": 4
    },
    {
        "id": 4070,
        "name": "Nelson Region",
        "code": "NSN",
        "countryId": 4
    },
    {
        "id": 4071,
        "name": "Southland Region",
        "code": "STL",
        "countryId": 4
    },
    {
        "id": 4072,
        "name": "Auckland Region",
        "code": "AUK",
        "countryId": 4
    },
    {
        "id": 4073,
        "name": "Tasman District",
        "code": "TAS",
        "countryId": 4
    },
    {
        "id": 4074,
        "name": "Bay of Plenty Region",
        "code": "BOP",
        "countryId": 4
    },
    {
        "id": 4075,
        "name": "Hawke's Bay Region",
        "code": "HKB",
        "countryId": 4
    }


app.get('/data', (req, res) => {
    const dataPath = path.join(__dirname, 'data.json');
    fs.readFile(dataPath, 'utf8', (err, data) => {
        if (err) {
            return res.status(500).json({ error: 'Failed to read data' });
        }
        res.json(JSON.parse(data));
    });
});